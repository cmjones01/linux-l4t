/dts-v1/;

#include "tegra124-meerkat.dtsi"
#include "panel-ch070oldl-002.dtsi"

/ {
	model = "Avionic Design Meerkat Evalboard";
	compatible = "ad,meerkat-evalboard", "ad,meerkat", "nvidia,tegra124";
	nvidia,dtsfilename = __FILE__;

	pinmux {
		common {
			dap2_din_pa4 {
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
			};
			dap2_dout_pa5 {
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
			};
			dap2_fs_pa2 {
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
			};
			dap2_sclk_pa3 {
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
			};
			dap3_fs_pp0 {
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
			};
			uart3_rxd_pw7 {
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
			};
			uart3_txd_pw6 {
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
			};
			uart2_rxd_pc3 {
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,function = "uartb";
			};
			uart2_txd_pc2 {
			
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,function = "uartb";
			};
			ph3 {
				nvidia,function = "pwm3";
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
			};
			dp_hpd_pff0 {
				nvidia,function = "safe";
				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
			};
		};
	};

	host1x {
		dc@54200000 {
			status = "okay";

			nvidia,dc-connection = "external-display";
			vdd_hdmi_5v0-supply = <&hdmi_vcc>;
		};

		hdmi {
			status = "okay";
		};
		dc@54240000 {
			status = "okay";

			nvidia,dc-connection = "internal-lcd";
			panel = <&edp_panel>;
		};

		sor@54540000 {
			status = "okay";
		};

		edp {
			status = "okay";
			/* GPIO used for hotplug detection
			 * WARNING: the flags given here are ignored.
			 * hdmi-display/disp-default-out/nvidia,out-flags
			 * must be used instead */
			nvidia,hpd-gpio = <&gpio TEGRA_GPIO(FF, 0) GPIO_ACTIVE_HIGH>;
			nvidia,ddc-i2c-bus = <&i2c2>;
			edp_panel: panel-ch070oldl-002 {
			};
		};
	};

	serial@70006000 {
		compatible = "nvidia,tegra114-hsuart", "nvidia,tegra30-hsuart";
		status = "okay";
	};

	serial@70006040 {
		compatible = "nvidia,tegra114-hsuart", "nvidia,tegra30-hsuart";
		status = "okay";
	};

	serial@70006200 {
		compatible = "nvidia,tegra114-hsuart", "nvidia,tegra30-hsuart";
		status = "okay";
	};

	serial@70006300 {
		status = "okay";
	};

	ahub {
		status = "okay";
		i2s@70301100 {
			status = "okay";
		};
	};

	/* SATA */
	sata@0x70020000 {
		status = "okay";
		vdd_sata-supply = <&ext_5v0>;
	};

	/* Recovery USB */
	usb@7d000000 {
		status = "okay";
		nvidia,port-otg;
		nvidia,mode = <TEGRA_USB_OPMODE_DEVICE>;
		nvidia,remote-wakeup-supported;
		nvidia,power-off-on-suspend;

		usb_vbus-supply = <&usb_vbus>;
	};

	udc@7d000000 {
		status = "okay";

		usb_vbus-supply = <&usb_vbus>;
	};

	otg@7d000000 {
		status = "okay";

		usb_vbus-supply = <&usb_vbus>;
	};

	/* USB 3.0 */
	xusb@70090000 {
		status = "okay";
		nvidia,gpio_ss1_sata = <0>;
		nvidia,portmap = <(XUSB_MUX_USB2_P1 | XUSB_MUX_SS_P0)>;
		nvidia,ss_portmap = <XUSB_PADCTL_SS_PORTMAP(P1, DISABLE)>;
		nvidia,lane_owner = <0>;
		nvidia,ulpicap = <0>;
		usb_vbus1-supply = <&usb3_vcc>;
	};

	/* Expansion header USB */
	usb@7d008000 {
		status = "okay";
		usb_vbus-supply = <&usb_ext_vbus>;
	};

	pcie-controller {
		nvidia,port0_status = <0>;
		nvidia,port1_status = <1>;
		nvidia,lanes = <TEGRA_PCIE_LANES_X2_X1>;
		status = "okay";
	};

	i2c@7000c000 {
		status = "okay";

		wm8903: audio-codec@1a {
			compatible = "wlf,wm8903";
			reg = <0x1a>;

			interrupt-parent = <&gpio>;
			interrupts = <TEGRA_GPIO(U, 5) IRQ_TYPE_LEVEL_HIGH>;

			avdd-supply = <&ext_1v8>;
			dbvdd-supply = <&ext_1v8>;
			cpvdd-supply = <&ext_1v8>;
			dcvdd-supply = <&ext_1v8>;

			gpio-controller;
			#gpio-cells = <2>;

			micdet-cfg = <0>;
			micdet-delay = <100>;
		};
	};

	i2c@7000c400 {
		status = "okay";

		lvds-bridge@20 {
			compatible = "nxp,ptn3460";
			reg = <0x20>;
			powerdown-gpio = <TEGRA_GPIO(U, 1)>;
			reset-gpio = <TEGRA_GPIO(H, 1)>;
			edid-emulation = <5>;
			ports {
				port@0 {
					bridge_out: endpoint {
						remote-endpoint = <&edp_panel>;
					};
				};
			};
		};
	};
	
	/* HDMI DDC */
	i2c@7000c700 {
		status = "okay";
	};

	i2c@7000d000 {
		pmic@40 {
			ams,backup-battery-chargable;
			ams,battery-backup-charge-voltage = <AS3722_BBVOLT_3_0V>;
			ams,battery-backup-charge-current = <AS3722_BBCCUR_50UA>;
			ams,battery-backup-enable-bypass;
			ams,battery-backup-charge-mode = <AS3722_BBCMODE_ACT_STBY_OFF>;

			test_btn_pinmux: pinmux@1 {
				gpio4 {
					pins = "gpio4";
					function = "gpio";
					bias-disable;
					input-enable;
				};
			};
		};
	};

	hda@70030000 {
		status = "okay";
	};

	avp-audio {
		compatible = "nvidia,tegra124-avp-audio", "nvidia,tegra30-avp-audio";
	};

	audio-offload {
		compatible = "nvidia,tegra-offload";
	};

	sound {
		compatible = "ad,tegra-audio-wm8903-medcom-wide",
			     "nvidia,tegra-audio-wm8903";
		nvidia,model = "Opticorder WM8903";

		nvidia,audio-routing =
			"Headphone Jack", "LINEOUTR",
			"Headphone Jack", "LINEOUTL",
			"Int Spk", "ROP",
 			"Int Spk", "RON",
 			"Int Spk", "LOP",
 			"Int Spk", "LON",
			"Mic Jack", "MICBIAS",
			"IN1R", "Mic Jack",
			"IN1L", "Mic Jack";

		nvidia,memory-clients = <SWGID_PPCS>;
		nvidia,i2s-controller = <&tegra_i2s1>;
		nvidia,i2s-is-master;
		nvidia,audio-codec = <&wm8903>;
	};

	/* MMC / SDIO card slot */
	sdhci@700b0000 {
		status = "okay";
		cd-gpios = <&gpio TEGRA_GPIO(EE, 2) GPIO_ACTIVE_LOW>;
		vddio_sd_slot-supply = <&sdmmc1_3v3>;
	};

	/* MMC card slot */
	sdhci@700b0400 {
		status = "okay";
		vddio_sd_slot-supply = <&sdmmc3_3v3>;
	};

	regulators {
		vsys: regulator@100 {
			compatible = "regulator-fixed";
			reg = <100>;
			regulator-name = "VSYS";
			regulator-min-microvolt = <12000000>;
			regulator-max-microvolt = <12000000>;
			regulator-always-on;
			regulator-boot-on;
		};

		vdd_5v0: regulator@101 {
			compatible = "regulator-fixed";
			reg = <101>;
			regulator-name = "+5V_VSYS";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			regulator-always-on;
			regulator-boot-on;
			vin-supply = <&vsys>;
		};

		vdd_3v3: regulator@102 {
			compatible = "regulator-fixed";
			reg = <102>;
			regulator-name = "+3V3_VSYS";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
			regulator-boot-on;
			vin-supply = <&vsys>;
		};

		ext_5v0: regulator@103 {
			compatible = "regulator-fixed";
			reg = <103>;
			regulator-name = "+5V_EXT";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			regulator-always-on;
			regulator-boot-on;
			vin-supply = <&vsys>;
		};

		ext_1v8: regulator@104 {
			compatible = "regulator-fixed";
			reg = <104>;
			regulator-name = "+1V8_EXT";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-always-on;
			regulator-boot-on;
			vin-supply = <&vdd_5v0>;
		};

		ext_3v3: regulator@105 {
			compatible = "regulator-fixed";
			reg = <105>;
			regulator-name = "+3V3_EXT";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
			regulator-boot-on;
			vin-supply = <&vdd_5v0>;
		};

		ext_12v0: regulator@106 {
			compatible = "regulator-fixed";
			reg = <106>;
			regulator-name = "+12V_EXT";
			regulator-min-microvolt = <1200000>;
			regulator-max-microvolt = <1200000>;
			regulator-always-on;
			regulator-boot-on;
			vin-supply = <&vsys>;
		};

		usb_vbus: regulator@107 {
			compatible = "regulator-fixed";
			reg = <107>;
			regulator-name = "USB_VBUS";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio TEGRA_GPIO(N, 4) GPIO_ACTIVE_HIGH>;
			enable-active-high;
			gpio-open-drain;
			vin-supply = <&ext_5v0>;
		};

		usb3_vcc: regulator@108 {
			compatible = "regulator-fixed";
			reg = <108>;
			regulator-name = "USB3_VCC";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&gpio TEGRA_GPIO(N, 5) GPIO_ACTIVE_HIGH>;
			enable-active-high;
			gpio-open-drain;
			vin-supply = <&ext_3v3>;
		};

		sdmmc3_3v3: regulator@109 {
			compatible = "regulator-fixed";
			reg = <109>;
			regulator-name = "+3V3_SDMMC3";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-enable-ramp-delay = <30000>;
			gpio = <&gpio TEGRA_GPIO(R, 0) GPIO_ACTIVE_HIGH>;
			enable-active-high;
			vin-supply = <&ext_3v3>;
		};

		sdmmc1_3v3: regulator@110 {
			compatible = "regulator-fixed";
			reg = <110>;
			regulator-name = "+3V3_SDMMC1";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-enable-ramp-delay = <30000>;
			gpio = <&gpio TEGRA_GPIO(U, 1) GPIO_ACTIVE_HIGH>;
			enable-active-high;
			vin-supply = <&ext_3v3>;
		};

		hdmi_vcc: regulator@111 {
			compatible = "regulator-fixed";
			reg = <111>;
			regulator-name = "HDMI_VCC";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio TEGRA_GPIO(J, 2) GPIO_ACTIVE_HIGH>;
			enable-active-high;
			vin-supply = <&ext_5v0>;
		};

		usb_ext_vbus: regulator@112 {
			compatible = "regulator-fixed";
			reg = <112>;
			regulator-name = "USB_VBUS_EXT";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio TEGRA_GPIO(FF, 1) GPIO_ACTIVE_HIGH>;
			enable-active-high;
			gpio-open-drain;
			vin-supply = <&ext_5v0>;
		};
	};

	pwm-fan {
		status = "okay";
	};

	leds {
		compatible = "gpio-leds";

		led0 {
			gpios = <&gpio TEGRA_GPIO(O, 1) GPIO_ACTIVE_HIGH>;
			default-state = "keep";
		};

		led1 {
			gpios = <&gpio TEGRA_GPIO(O, 2) GPIO_ACTIVE_HIGH>;
			default-state = "keep";
		};

		led2 {
			gpios = <&gpio TEGRA_GPIO(O, 3) GPIO_ACTIVE_HIGH>;
			default-state = "keep";
		};

		led3 {
			gpios = <&gpio TEGRA_GPIO(O, 4) GPIO_ACTIVE_HIGH>;
			default-state = "keep";
		};
	};

	buttons {
		compatible = "gpio-keys-polled";
		#address-cells = <1>;
		#size-cells = <0>;

		pinctrl-names = "default";
		pinctrl-0 = <&test_btn_pinmux>;

		poll-interval = <100>;

		button@0 {
			reg = <0>;
			label = "Test Button";
			linux,code = <KEY_ENTER>;

			gpios = <&pmic 4 GPIO_ACTIVE_LOW>;
		};
	};
	
	caddymotor {
		compatible = "cerebriam,caddymotor";
		
		motor@0 {
			gpio-clk = <&gpio TEGRA_GPIO(H,3) GPIO_ACTIVE_HIGH>;
			gpio-en = <&gpio TEGRA_GPIO(H,5) GPIO_ACTIVE_HIGH>;
			gpio-dir = <&gpio TEGRA_GPIO(H,6) GPIO_ACTIVE_HIGH>;
			gpio-reset = <&gpio TEGRA_GPIO(I,2) GPIO_ACTIVE_HIGH>;
			gpio-half-full = <&gpio TEGRA_GPIO(I,5) GPIO_ACTIVE_HIGH>;
			gpio-control = <&gpio TEGRA_GPIO(I,7) GPIO_ACTIVE_HIGH>;
		};
		motor@1 {
			gpio-clk = <&gpio TEGRA_GPIO(K,0) GPIO_ACTIVE_HIGH>;
			gpio-en = <&gpio TEGRA_GPIO(J,0) GPIO_ACTIVE_HIGH>;
			gpio-dir = <&gpio TEGRA_GPIO(K,1) GPIO_ACTIVE_HIGH>;
			gpio-reset = <&gpio TEGRA_GPIO(K,2) GPIO_ACTIVE_HIGH>;
			gpio-half-full = <&gpio TEGRA_GPIO(K,3) GPIO_ACTIVE_HIGH>;
			gpio-control = <&gpio TEGRA_GPIO(K,4) GPIO_ACTIVE_HIGH>;
		};
	};
};
